## Accounts [/accounts]
### Get recommended accounts [GET /accounts/recommended]

Returns a list of phone number-based recommended accounts.

+ Response 200 (application/json)
    + Attributes (object)
        + accounts (array[Account]) - The recommended accounts

    + Body
    
            {
                "accounts": [
                    {
                      "id": "W5RlmfD",
                      "ain": "18556",
                      "url": "http://localhost:5000/v12/accounts/W5RlmfD",
                      "displayName": null,
                      "alias": "bobster283",
                      "type": "standard",
                      "avatar": {
                        "small": "https://cdn.wysker.com/avatars/default/16.jpg",
                        "large": "https://cdn.wysker.com/avatars/default/16.jpg"
                      },
                      "biography": null,
                      "relationship": "none",
                      "created": "2018-07-24T14:12:41.246Z"
                    },
                    // ...
                ]
            }

### Search accounts [GET /accounts]

Returns a list of accounts (max 200) that meet the search criteria.
Results can be filtered by account type which can be `standard`, `influencer`, `brand` or `brand_influencer`.
This endpoint also can also return results based on a keyword search (`find` query param).
If no `type` or `find` query params are specified, the endpoint will return 200 of the most followed accounts.

+ Parameters
    + type (enum[string], optional) - Type of the account
        + Members
            + `standard` - A normal user account
            + `influencer` - An influencer account
            + `brand` - A brand account
            + `brand_influencer` - A brand- or influencer account
    + find (string, optional) - Search phrase, for example "nike", "zara".

+ Response 200 (application/json)
    + Attributes (object)
        + accounts (array[Account]) - List of accounts matching the input parameters

    + Body
    
        {
            "accounts": [
                {
                  "id": "WocfQyYy",
                  "ain": "49431",
                  "url": "http://localhost:5000/v12/accounts/37533",
                  "displayName": null,
                  "alias": "Yoana‚ù§",
                  "type": "standard",
                  "avatar": {
                    "small": "https://cdn.wysker.com/avatars/default/14.jpg",
                    "large": "https://cdn.wysker.com/avatars/default/14.jpg"
                  },
                  "biography": null,
                  "relationship": "none",
                  "created": "2019-01-19T07:50:53.859Z"
                },
                // ...
            ]
        }

### Get current account [GET /accounts/current]

Returns all information about the account the user is currently logged into.

+ Response 200 (application/json)

    + Attributes (Account)

    + Body
    
        {
            id: 'Wocgaq1I',
            tokenBalance: '0.0000',
            created: '2019-04-08T09:27:53.289Z',
            inviteLink: 'https://wysker.com/IhrMwFT1FamiB',
            favoriteCount: '0',
            ain: '56282',
            level: 1,
            trainingProgress: 0,
            alias: '17290196924425032051008074738882',
            avatar: {
                small: "https://cdn.wysker.com/...",
                large: "https://cdn.wysker.com/..."
            }
        }

### Switch accounts [PUT /accounts/current]

Logs the user into a new account (described by `whid`) and returns new account's information.

+ Parameters
    + id (string) - WHID of an account the user is switching into

+ Response 200 (application/json)

    + Attributes (object)
        + account (Account) - The account being switched to
        + accessToken (string) - The new access token to be used with this account
        + expires (number) - UTC timestamp of when the token expires

    + Body
    
        {
          "account": {
            "id": "Wocg7oT8",
            "ain": "56910",
            "url": "http://localhost:5000/v12/accounts/current",
            "displayName": null,
            "alias": "test.user.2",
            "type": "standard",
            "avatar": {
              "small": "https://cdn.wysker.com/avatars/large/179/lbPEPFyOT6lf.jpg",
              "large": "https://cdn.wysker.com/avatars/small/179/lbPEPFyOT6lf.jpg"
            },
            "biography": null,
            "relationship": "self",
            "tokenBalance": "0.0000",
            "favoriteCount": 0,
            "created": "2019-05-08T11:07:21.809Z",
            "inviteLink": "https://wysker.com/IhrrmjmLHQreS"
          },
          "accessToken": "AB78le2UQBS2EAL5Lc9xiAAAAAAAAAAAAAAAAAAAAAA=",
          "expires": 1560608108588
        }

+ Response 400 (application/json)
    Error returned when wrong/malformed `whid` is provided

    + Body

            {
                "error": "INVALID_WHID",
                "detail": "Invalid WHID."
            }

+ Response 403 (application/json)
    Error returned when the given user is not a member of the specified account.

    + Body

            {
                "error": "NOT_A_MEMBER",
                "detail": "The specified user is not a member of the specified account."
            }

### Get users' accounts [GET /users/me/accounts]

Returns all accounts the user has access to

+ Response 200 (application/json)
    + Attributes (object)
        + accounts (array[Account]) - The accounts the user has access to

    + Body
    
        {
          "accounts": [
            {
              "id": "Wocg7oT8",
              "ain": "56910",
              "url": "http://localhost:5000/v12/accounts/Wocg7oT8",
              "displayName": null,
              "alias": "test.user.2",
              "type": "standard",
              "avatar": {
                "small": "https://cdn.wysker.com/avatars/large/179/lbPEPFyOT6lf.jpg",
                "large": "https://cdn.wysker.com/avatars/small/179/lbPEPFyOT6lf.jpg"
              },
              "biography": null,
              "relationship": "self",
              "tokenBalance": "0.0000",
              "favoriteCount": 0,
              "created": "2019-05-08T11:07:21.809Z"
            }
          ]
        }

### Get account by AIN [GET /accounts/ain/{ain}]

Returns all public information for an account given their AIN (account identification number)

+ Parameters
    + ain (number) - The accounts's AIN

+ Response 200 (application/json)

    + Attributes (Account)

    + Body
    
        {
          "id": "Wocg7oT8",
          "ain": "56910",
          "url": "http://localhost:5000/v12/accounts/Wocg7oT8",
          "displayName": null,
          "alias": "test.user.2",
          "type": "standard",
          "avatar": {
            "small": "https://cdn.wysker.com/avatars/large/179/lbPEPFyOT6lf.jpg",
            "large": "https://cdn.wysker.com/avatars/small/179/lbPEPFyOT6lf.jpg"
          },
          "biography": null,
          "relationship": "self",
          "tokenBalance": "0.0000",
          "favoriteCount": 0,
          "created": "2019-05-08T11:07:21.809Z"
        }

+ Response 404 (application/json)
    Error returned if no users with the specified AIN exists

    + Body

            {
                "error": "UNKNOWN_ACCOUNT",
                "detail": "No account with that AIN is currently on record."
            }

### Get account by alias [GET /accounts/alias/{alias}]

Returns all public information for an account given its alias. This endpoint can also be used to validate if a username is still available.

+ Parameters
    + alias (string) - The account's alias

+ Response 200 (application/json)

    + Attributes (Account)

    + Body
    
        {
          "id": "W5Rlk08",
          "ain": "24596",
          "url": "http://localhost:5000/v12/accounts/W5Rlk08",
          "displayName": null,
          "alias": "Gucci",
          "type": "standard",
          "avatar": {
            "small": "https://cdn.wysker.com/avatars/default/2.jpg",
            "large": "https://cdn.wysker.com/avatars/default/2.jpg"
          },
          "biography": null,
          "relationship": "none",
          "tokenBalance": "3.0000",
          "favoriteCount": 1,
          "created": "2018-09-18T03:40:16.655Z"
        }

+ Response 404 (application/json)
    Error returned if no accounts with the specified alias exists

    + Body

            {
                "error": "NO_SUCH_ALIAS",
                "detail": "No account with that alias is currently on record."
            }

### Get account by id [GET /accounts/{id}]

Returns all public information for an account given its ID (WHID)

+ Parameters
    + id (string) - The account's WHID

+ Response 200 (application/json)

    + Attributes (Account)

    + Body
    
        {
          "id": "W5Rlk08",
          "ain": "24596",
          "url": "http://localhost:5000/v12/accounts/W5Rlk08",
          "displayName": null,
          "alias": "Gucci",
          "type": "standard",
          "avatar": {
            "small": "https://cdn.wysker.com/avatars/default/2.jpg",
            "large": "https://cdn.wysker.com/avatars/default/2.jpg"
          },
          "biography": null,
          "relationship": "none",
          "tokenBalance": "3.0000",
          "favoriteCount": 1,
          "created": "2018-09-18T03:40:16.655Z"
        }

+ Response 404 (application/json)
    Error returned if no accounts with the specified alias exists

    + Body

            {
                "error": "UNKNOWN_ACCOUNT",
                "detail": "No account with that id is currently on record."
            }

### Upload account avatar [PUT /accounts/current/avatar]

Uploads a JPEG image to the backend to be used as a user's avatar image. The request uses the `multipart/form-data` format.

Uploaded images need to be square, at least 512x512 pixels, smaller than 1280x1280 pixels and cannot exceed 500KB in size.

+ Response 200 (application/json)
    + Attributes (object)
        + success (boolean) - Indicates that the image was successfully uploaded
        + avatar (string) - URL of the newly uploaded avatar image in JPEG format. The image should only be cached for short periods of time to allow for asynchronous processing on the backend.
    + Body

            {
                "success": true,
                "avatar": "https://cdn.wysker.com/..."
            }

+ Response 400 (application/json)
    Error returned if the uploaded image has an invalid format

    + Body

            {
                "error": "INVALID_IMAGE_FORMAT",
                "detail": "The uploaded image is not of acceptable size or format."
            }

+ Response 413  (application/json)
    Error returned if the uploaded image exceeds 500KB

    + Body

            {
                "error": "IMAGE_FILE_SIZE_TOO_LARGE",
                "detail": "The uploaded image file size exceeds the limit of 500KB."
            }

### Change alias name [PUT /accounts/current/alias]

Changes account's alias. This operation can only be performed once

+ Parameters
    + alias (string) - New account alias

+ Response 200 (application/json)
    + Attributes (object)
        + success (boolean) - Indicates that the alias was successfully changed.
    + Body

            {
                "success": true
            }

+ Response 400 (application/json)
    Error returned if alias has already been changed

    + Body

            {
                "error": "ALIAS_ALREADY_CHANGED",
                "detail": "Alias for this account has already been changed. Alias can be changed only once."
            }

+ Response 400 (application/json)
    Error returned if alias name is invalid

    + Body

            {
                "error": "INVALID_ALIAS_NAME",
                "detail": "The provided alias name is invalid. Alias can only be alpha-numeric with dash and underscore, 3-15 characters long."
            }