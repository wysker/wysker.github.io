## Relationships [/accounts/current/relationships]
### List an accounts friends and followees [GET /accounts/current/relationships{?page,type,status}]

Lists an account's friends and followees. List can be filtered by `status` query param which can be `confirmed`, `pending` or `requested` and by `type` which can be `standard`, `influencer`, `brand` and `brand_influencer`.

+ Parameters
    + type (enum[string], optional) - Type of accounts to return. If not specified, all types of accounts are returned
        + Members
            + `standard` - A normal user account
            + `influencer` - An influencer account
            + `brand` - A brand account
            + `brand_influencer` - A brand- or influencer account
    + page (string, optional) - Page of the results
    + status (enum[string], optional) - Status of relationships to return
        + Members
            + `confirmed` - A relationship between the accounts exists and has been confirmed
            + `pending` - The current account has sent a friend request to this account, but it has not yet been accepted 
            + `requested` - This account has sent a friend request to the current account, but it has not yet been accepted   

+ Response 200 (application/json)
    + Attributes (object)
        + relationships (array[Account]) - List of friends

    + Body
    
            {
                "relationships": [{
                    "id": "W8wM",
                    "friend": "20002",
                    "status": "confirmed",
                    "created": "2019-03-26T10:54:45.507Z",
                    "uin": "31977",
                    "alias": "miraskin",
                    "avatar": {
                        "small": "https://cdn.wysker.com/..."
                    }
                },
                {
                    "id": "W8wK",
                    "friend": "20000",
                    "status": "confirmed",
                    "created": "2019-03-26T10:54:45.507Z",
                    "uin": "31975",
                    "alias": "valcsak98",
                    "avatar": {
                        "small": "https://cdn.wysker.com/..."
                    }
                }]
            }

### Invite a new friend or follow a brand/influencer [POST /account/current/relationships]

Invites a new friend with a given `whid`

+ Request
    + Attributes (object)
        + id (string) - `whid` of a friend (account) to invite
    + Body

            {
                "id": "W2m20VA"
            }

+ Response 200 (application/json)
    + Attributes (object)
        + success (boolean) - Indicates that the request finished successfully

    + Body

            {
                "success": true
            }

+ Response 404 (application/json)
    Error returned when requestee account is not found

    + Body

            {
                "error": "NO_SUCH_USER",
                "detail": "The specified user does not exist"
            }

+ Response 400 (application/json)
    Error returned if both accounts are already in a relationship

    + Body

            {
                "error": "ALREADY_IN_RELATIONSHIP",
                "detail": "The two specified accounts are already in a relationship."
            }

### Accept friends request [POST /accounts/current/relationships/{id}/accept]

Accepts friend request from another user. No `POST` body is expected by this endpoint.

+ Request
    + Attributes (object)
        + id (string) - `whid` of a friend (account) to accept an invitation from

+ Response 200 (application/json)
    + Attributes (object)
        + success (boolean) - Indicates that the request finished successfully

    + Body

            {
                "success": true
            }

+ Response 404 (application/json)
    Error returned if no users with the specified ID exists

    + Body

            {
                "error": "NO_SUCH_USER",
                "detail": "The specified user does not exist"
            }

### Remove user from friends list [DELETE /accounts/current/relationships/{id}]

Removes given user from friends list

+ Request
    + Attributes (object)
        + id (string) - `whid` of a friend (account) to accept an invitation from

+ Response 200 (application/json)
    + Attributes (object)
        + success (boolean) - Indicates that the request finished successfully

    + Body

            {
                "success": true
            }

+ Response 404 (application/json)
    Error returned if no users with the specified ID exists

    + Body

            {
                "error": "NO_SUCH_USER",
                "detail": "The specified user does not exist"
            }